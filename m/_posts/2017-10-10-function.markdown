---
layout: post
title: 抽象机制—— 函数
date: 2017-10-10 17:04:48 +0800
categories: CS
tags: C/C++
img: https://raw.githubusercontent.com/wwg1996/wwg1996.github.io/master/images/c.jpg
---

# 函数

---
> **为什么要有函数**？
> 1. 有组织：复杂的程序模块化，简单化，分而攻之。
> 2. 可重用：不用复制粘贴。
> 3. 易测试：减少代码量，更容易找出八哥。
> 4. 可扩展：不动代码主体就可以增加新功能。
> 5. 抽象化：比如标准库，把写好功能的代码封装成黑箱，使用者只需知道接口，无需知道原理。

> **tips**
> 1. 每次调用函数，都会创建该函数的所有形参，形参的作用域是函数体。

## 1. 传递实参
* **按值传递**
> 函数实际接受的是实参的副本，最基本的传递方式

* **传递指针**
> 这时候就可以在函数内部通过指针修改实参的值了。


```c
int abs(int* pnum)
{
    return (*pnum>0)?*pnum:-*pnum;
}
void main()
{
    int num(3);
    
    int* pnum(&num);
    
    cout << abs(pnum) << endl;
    
}
```
## 其他
* **const修饰符**
> 避免意外修改函数参数\
```c
`int func(const int& num)`
```

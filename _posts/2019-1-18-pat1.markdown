---
layout: post
title:  PAT练习 day1
date: 2019-01-18 14:02:56 +0800
categories: CS
tags:  
img: 
---


## 1001 害死人不偿命的(3n+1)猜想 （15 分）
> 卡拉兹(Callatz)猜想：
> 对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……
> 我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？

* 输入格式：
每个测试输入包含 1 个测试用例，即给出正整数 n 的值。
* 输出格式：
输出从 n 计算到 1 需要的步数。
* 输入样例：3
* 输出样例：5

### 程序
```c++
#include <iostream>
using namespace std;

int Callatz(int n)
{
    int cnt=0;
    while(n>1){
    if(n%2==0) n = n/2;
    else n = (3*n+1)/2;
    cnt++;
}
    return cnt;
}
int main(int argc, char *argv[])
{
    int n;
    cin >> n;  
    cout << Callatz(n);
    return 0;
}

```

## 1002 写出这个数 （20 分）
> 读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。

* 输入格式：每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10​100​​。

* 输出格式：在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。
* 输入样例：
1234567890987654321123456789
*输出样例：yi san wu

### 分析
* 此题需要注意的地方：
  * 输入自然数的范围很大，不能用整型或浮点型保存，所以必须使用string来存储n；
  * 最后一个数字的拼音输出后面时没有空格的，要单独输出。

### 程序

```c++
#include <iostream>
#include <string>
using namespace std;

int main()
{
    string n;
    string dic[10]={"ling", "yi", "er", "san", "si", "wu", "liu", "qi", "ba", "jiu"};
    while (cin>>n)
    {
        int sum = 0;  //存储数位的和 
        int r_sum[10] = {0};  //存储和的数位 
        int tmp;
        int i=0; //和的位数 
        for (int i=0; i<n.length(); i++)
        {
            sum += n[i] - '0';
        }
        while (sum)
        {
            r_sum[i++] = sum % 10;
            sum = sum / 10;
        }        
        while (i>1)
        {
            tmp = r_sum[--i];
            cout<<dic[tmp]<<" ";
        }
        cout<<dic[r_sum[0]]<<endl;
    }
    system("pause");
    return 0;
}
```


